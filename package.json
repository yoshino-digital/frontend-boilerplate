{
  "name": "yoshino-yoi-boilerplate",
  "version": "0.0.1",
  "description": "Lightweight starter kit to create static websites with Yoi - the Yoshino frontend component library.",
  "author": "yoshino.digital dev team",
  "config": {
    "distSubdir": ""
  },
  "devDependencies": {
    "autoprefixer": "^6.7.7",
    "bower": "^1.7.10",
    "browser-sync": "^2.18.8",
    "chokidar-cli": "^1.2.0",
    "less": "^2.7.2",
    "nunjucks-cli": "^0.5.1",
    "postcss-cli": "^4.1.1",
    "uglify-js": "^2.8.14",
    "uncss": "^0.16.1"
  },
  "scripts": {
    "postinstall": "npm run yoi-update && npm run yoi-init && npm run build && npm run serve",
    "dist-empty": "rm -rf dist && mkdir -p dist/$npm_package_config_distSubdir/assets/{download,favicon,fonts,img,js,css}",
    "dist-clean": "rm dist/$npm_package_config_distSubdir/assets/css/screen.css && mv dist/$npm_package_config_distSubdir/assets/css/screen.reduced.css dist/$npm_package_config_distSubdir/assets/css/screen.css",
    "copy": "npm run copy-favicon && npm run copy-opengraph && npm run copy-download && npm run copy-images && npm run copy-scripts && npm run copy-fonts",
    "copy-favicon": "rsync -av --exclude='readme.md' src/assets/favicon/* dist/$npm_package_config_distSubdir",
    "copy-opengraph": "rsync -av --exclude='readme.md' src/assets/opengraph/* dist/$npm_package_config_distSubdir",
    "copy-download": "rsync -av --exclude='readme.md' src/assets/download/* dist/$npm_package_config_distSubdir/assets/download",
    "copy-images": "rsync -av --exclude='readme.md' src/assets/img/* dist/$npm_package_config_distSubdir/assets/img",
    "copy-scripts": "cp bower_components/jquery/dist/jquery.min.js dist/$npm_package_config_distSubdir/assets/js",
    "copy-fonts": "rsync -av --exclude='readme.md' src/assets/fonts/* dist/$npm_package_config_distSubdir/assets/fonts",
    "yoi-update": "bower update",
    "yoi-init": "npm run yoi-less && npm run yoi-js-index",
    "yoi-less": "npm run yoi-less-config && npm run yoi-less-index",
    "yoi-less-config": "find bower_components/yoshino-yoi/src/less/config -name '*.less' -exec cp {} src/assets/less/config \\;",
    "yoi-less-index": "npm run yoi-less-utilities-index && npm run yoi-less-components-index",
    "yoi-less-utilities-index": "find bower_components/yoshino-yoi/src/less/utilities -name '*.less' -exec echo '@import \"./{}\";' \\; > src/assets/less/yoi-utilities.less",
    "yoi-less-components-index": "find bower_components/yoshino-yoi/src/components -name '*.less' -exec echo '@import \"./{}\";' \\; > src/assets/less/yoi-components.less",
    "yoi-js-index": "npm run yoi-js-actions-index && npm run yoi-js-behaviours-index && npm run yoi-js-modules-index && npm run yoi-js-components-index",
    "yoi-js-actions-index": "find bower_components/yoshino-yoi/src/js/actions -name '*.js' -exec echo './{}' \\; > src/assets/js/yoi-actions.index",
    "yoi-js-behaviours-index": "find bower_components/yoshino-yoi/src/js/behaviours -name '*.js' -exec echo './{}' \\; > src/assets/js/yoi-behaviours.index",
    "yoi-js-modules-index": "find bower_components/yoshino-yoi/src/js/modules -name '*.js' -exec echo './{}' \\; > src/assets/js/yoi-modules.index",
    "yoi-js-components-index": "find bower_components/yoshino-yoi/src/components -name '*.js' -exec echo './{}' \\; > src/assets/js/yoi-components.index",
    "styles-process": "postcss -u autoprefixer -b 'last 2 versions' dist/$npm_package_config_distSubdir/assets/css/screen.css -o dist/$npm_package_config_distSubdir/assets/css/screen.css --no-map",
    "styles-compile": "lessc src/assets/less/theme.less dist/$npm_package_config_distSubdir/assets/css/screen.css",
    "styles-compress-old": "cssnano dist/$npm_package_config_distSubdir/assets/css/screen.css dist/$npm_package_config_distSubdir/assets/css/screen.css --svgo",
    "styles-compress": "postcss -u cssnano -o dist/$npm_package_config_distSubdir/assets/css/screen.css dist/$npm_package_config_distSubdir/assets/css/screen.css --no-map",
    "styles-reduce": "uncss dist/$npm_package_config_distSubdir/**/*.html --csspath dist/$npm_package_config_distSubdir/assets/css/ --htmlroot dist > dist/$npm_package_config_distSubdir/assets/css/screen.reduced.css && npm run dist-clean",
    "build": "npm run dist-empty && npm run build-scripts && npm run build-styles && npm run build-templates && npm run copy",
    "build-scripts": "uglifyjs $(echo 'bower_components/yoshino-yoi/src/js/yoi.js' ; echo $(cat src/assets/js/yoi-*.index) ; echo $(find src/assets/js/theme -name '*.js' -exec echo '{}' \\;)) --source-map-inline --beautify -o dist/$npm_package_config_distSubdir/assets/js/scripts.js",
    "build-styles": "npm run styles-compile --source-map-map-inline && npm run styles-process",
    "build-templates": "nunjucks **/*.njk nunjucks.data.json --options nunjucks.config.json --path src/templates --out dist/$npm_package_config_distSubdir",
    "publish": "npm run dist-empty && npm run build-templates && npm run publish-scripts && npm run copy && npm run publish-styles",
    "publish-scripts": "uglifyjs $(echo 'bower_components/yoshino-yoi/src/js/yoi.js' ; echo $(cat src/assets/js/yoi-*.index) ; echo $(find src/assets/js/theme -name '*.js' -exec echo '{}' \\;)) --compress -o dist/$npm_package_config_distSubdir/assets/js/scripts.js",
    "publish-styles": "npm run styles-compile && npm run styles-process && npm run styles-reduce && npm run styles-compress",
    "watch": "npm run watch-fonts & npm run watch-images & npm run watch-scripts & npm run watch-styles & npm run watch-templates",
    "watch-fonts": "chokidar 'src/assets/img/**/*' -c 'npm run copy-fonts'",
    "watch-images": "chokidar 'src/assets/img/**/*' -c 'npm run copy-images'",
    "watch-scripts": "chokidar 'src/assets/js/**/*' -c 'npm run build-scripts'",
    "watch-styles": "chokidar 'src/assets/less/**/*' -c 'npm run build-styles'",
    "watch-templates": "chokidar 'src/templates/**/*' -c 'npm run build-templates'",
    "serve": "browser-sync start --server dist --files dist --startPath $npm_package_config_distSubdir --cors --no-notify",
    "upload": "scp -r ./dist/* user@server:/html/",
    "dev": "npm run build && npm run serve & npm run watch"
  }
}
